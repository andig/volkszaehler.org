language: php
php:
- 7.1
- 7.2
- 7.3
services:
- mysql
sudo: false
env:
  global:
  - DEPENDENCIES=standard
  - TRAVIS_TEST_EXCLUDES="--exclude-group slow,jpgraph,pushserver"
  - secure: BHP0515m9qtXjMDPm5aBgxFFC8AIKAJ+qeKi7MdH1X4L+0rPjeLfbODlBzfmcd2l9MqBA2zX0GfNeXF34hwpz2+ODUB0lVOneAqqmMj6cMmsnJTDtTf+Hb2rS62an+FLDvn20EuwzS3DFHdd2nm5QCsD0KpuWMOGGCSITpW2Ce0=
  - secure: XKt8ONx08FHFK74b83ijlU7Q7Z2hZBd0vAW8uWH2t2xuuAs+QgXWKxUF3Z8g2E4UhRuLnBu0JWyPfS0leljjqdpoptAqen0fJmTTqZTWWjUzfYFpv6YXhwNBfn21ITEgiZ7n4Pfx+n4QRYHSI5KlGs6sBDN24cZ/4z3fNFyj06U=
  matrix:
  - DB=mysql
matrix:
  include:
  - php: 7.1
    services: postresql
    env: DB=pgsql
  - php: 7.1
    env: DB=sqlite
  - php: 7.1
    env: DB=mysql COMPONENT=HTTPD
  - php: 7.1
    env: DB=mysql COMPONENT=PUSHD
  - php: 7.1
    env: DB=mysql COMPONENT=DOCKER
  - php: 7.1
    env: DB=mysql DEPENDENCIES=lowest
  - php: 7.1
    env: DB= DEPENDENCIES= JSLINT=true
cache:
  directories:
  - "$COMPOSER_CACHE_DIR"
  - "$HOME/.composer/cache"
  - node_modules
before_install:
- if [ -e /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini
  ]; then rm /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini;
  fi
install:
- if [ "$JSLINT" = true ]; then npm install -g gulp; npm install; fi
- if [ "$DEPENDENCIES" = "standard" ]; then composer install; fi
- if [ "$DEPENDENCIES" = "lowest" ]; then composer update --prefer-lowest -n; fi
- |
  if [ "$JSLINT" != true ]; then
    phpenv config-add ./test/bin/apc.ini && printf "\n" | pecl install apcu
    php -r 'echo(function_exists("apcu_store")?"APCu enabled":"APCu disabled");'
  fi
before_script:
- set -e
- cp etc/volkszaehler.conf.template.php etc/volkszaehler.conf.php
- DATABASE=volkszaehler
- USER=root
- PASSWORD=
- if [ "$DB" = "pgsql" ]; then USER=postgres; fi
- sed -i "s/'pdo_mysql'/'pdo_$DB'/" etc/volkszaehler.conf.php
- sed -i "s/'vz'/'$USER'/" etc/volkszaehler.conf.php
- sed -i "s/'demo'/'$PASSWORD'/" etc/volkszaehler.conf.php
- sed -i "s/'volkszaehler'/'$DATABASE'/" etc/volkszaehler.conf.php
- sed -i "s/'secretkey'/'secretkey' =\> '08154711', \/\//" etc/volkszaehler.conf.php
- sed -i "s/\/\/ 'user'/'user'/" etc/volkszaehler.conf.php
- if [ "$DB" = "sqlite" ]; then sed -i "s/\?>/\$config['db']['path']\ =\ VZ_DIR.'\/sqlite.db3'\;\n?>/"
  etc/volkszaehler.conf.php; fi
- cat etc/volkszaehler.conf.php
- if [ "$DB" = "mysql" ]; then mysql -e "CREATE DATABASE $DATABASE;" -u $USER; fi
- if [ "$DB" = "pgsql" ]; then psql -c "CREATE DATABASE $DATABASE;" -U $USER; fi
- if [ -n "$DB" ]; then php bin/doctrine orm:schema-tool:create; fi
- |
  if [ "$COMPONENT" = "HTTPD" ]; then
    sed -i "s/testAdapter\" value=\".*\"/testAdapter\" value=\"HTTP\"/" phpunit.xml
    vendor/bin/ppm start -c etc/middleware.json &
  fi
- |
  if [ "$COMPONENT" = "PUSHD" ]; then
    sed -i "s/\?>/\$config['push']['enabled']\ =\ true\;\n?>/" etc/volkszaehler.conf.php
    php bin/push-server &
  fi
after_script:
- |
  if [ "$COMPONENT" = "HTTPD" ]; then
    vendor/bin/ppm stop -c etc/middleware.json
  fi
script:
- if [ -n "$DB" ]; then vendor/bin/phpunit $TRAVIS_TEST_EXCLUDES,aggregation; fi
- |
  if [ "$DB" = "mysql" ]; then
    sed -i "s/\?>/\$config['aggregation']\ =\ true;\n?>/" etc/volkszaehler.conf.php
    php bin/aggregate run -m delta -l hour
    vendor/bin/phpunit $TRAVIS_TEST_EXCLUDES
  fi
- if [ "$COMPONENT" = "PUSHD" ]; then vendor/bin/phpunit --group pushserver; fi
- if [ "$JSLINT" = true ]; then gulp jshint; fi
after_success:
- echo $COMPONENT
- echo $TRAVIS_BRANCH
- echo $DOCKER_USER
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- export REPO=andig/volkszaehler
- docker pull $REPO:latest
- docker build --cache-from $REPO:latest -f Dockerfile -t $REPO:$COMMIT .
- docker tag $REPO:$COMMIT $REPO:latest
- docker push $REPO
